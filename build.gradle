/**
 * 构建的配置
 */
buildscript {
    ext {
        springBootVersion = '1.4.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

/**
 * All projects configuration
 */
configure(allprojects) { project ->
    group = "org.asion"
    version = qualifyVersionIfNecessary(version)

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'groovy'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    ext {
        springBootVersion = '1.4.0.BUILD-SNAPSHOT'
        springVersion = '4.3.1.BUILD-SNAPSHOT'
        springCloudVersion = 'Brixton.SR1'
        springBootAdminVersion = '1.3.3'
        platformBomVersion = '2.1.0.BUILD-SNAPSHOT'
        unitilsBom = '3.4.2'
        elasticsearchVersion = '2.2.2'
//        springDataElasticsearch = '2.0.1.RELEASE'
        assertjVersion = '3.4.1'
    }

    repositories {
        maven { url "/Users/Asion/.m2/repository" }
        mavenLocal()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
}

/**
 * asion-projects's sub projects configuration
 */
subprojects {
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom "org.springframework:spring-framework-bom:${springVersion}"
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "io.spring.platform:platform-bom:${platformBomVersion}"
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
        // don't include or exclude anything explicitly by default. See SPR-12085.
    }

    task javadocJar(type: Jar) {
        classifier = "javadoc"
        from javadoc
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}

/**
 * rootProject configuration
 */
configure(rootProject) {
    description = "Asion System"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

/*
 * Support publication of artifacts versioned by topic branch.
 * CI builds supply `-P BRANCH_NAME=<TOPIC>` to gradle at build time.
 * If <TOPIC> starts with 'SPR-', change version
 *     from BUILD-SNAPSHOT => <TOPIC>-SNAPSHOT
 *     e.g. 3.2.1.BUILD-SNAPSHOT => 3.2.1.SPR-1234-SNAPSHOT
 */
def qualifyVersionIfNecessary(version) {
    if (rootProject.hasProperty("BRANCH_NAME")) {
        def qualifier = rootProject.getProperty("BRANCH_NAME")
        if (qualifier.startsWith("SPR-")) {
            return version.replace('BUILD', qualifier)
        }
    }
    return version
}
